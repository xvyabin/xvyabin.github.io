{"meta":{"title":"开博大吉","subtitle":null,"description":null,"author":"xvyabin","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"HTML简介（几个常用标签）","slug":"HTML几个常用标签","date":"2018-11-04T02:52:19.127Z","updated":"2018-11-04T02:57:46.767Z","comments":true,"path":"2018/11/04/HTML几个常用标签/","link":"","permalink":"http://yoursite.com/2018/11/04/HTML几个常用标签/","excerpt":"","text":"HTML简介（几个常用标签） HTML 是用来描述网页的一种语言。 HTML 指的是超文本标记语言: Hyper Text Markup Language HTML 不是一种编程语言，而是一种标记语言 标记语言是一套标记标签 (markup tag) HTML 使用标记标签来描述网页 HTML 文档包含了HTML 标签及文本内容 HTML文档也叫做 web 页面 HTML标签总结(常用) 文档章节标签body 呈现给用户header 头部nav 导航aside 和主要内容不相关的区域article 相邻独立可重复主体section 文档中的区域footer 尾部hx h1-h6 标题 文本标签&lt;a&gt; &it;/a&gt;超链接创建指向另一个文档的链接创建一个文档内部的锚点链接到Email地址em strong strong比em更强调span 无语义br 换行 单闭合标签cite q 引用cite引用的出处q简短的一段文字b i 格式化粗体但不想强调 b标签斜体 技术术语等i标签 组标签div 分区(其他标签的容器)p 段落ul ol dl列表无序列表 ul li有序列表 ol li自定义列表dl dt ddpre 经过格式化的内容(保留空格和换行)blockquote 大段引用 资源标签img 嵌入图片(自闭合图片)","categories":[],"tags":[]},{"title":"HTTP入门","slug":"HTTP入门","date":"2018-10-30T07:18:48.274Z","updated":"2018-10-30T07:20:56.147Z","comments":true,"path":"2018/10/30/HTTP入门/","link":"","permalink":"http://yoursite.com/2018/10/30/HTTP入门/","excerpt":"","text":"HTTP入门 超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。所有的WWW文件都必须遵守这个标准。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。1960年美国人Ted Nelson构思了一种通过计算机处理文本信息的方法，并称之为超文本（hypertext）,这成为了HTTP超文本传输协议标准架构的发展根基。Ted Nelson组织协调万维网协会（World Wide Web Consortium）和互联网工程工作小组（Internet Engineering Task Force ）共同合作研究，最终发布了一系列的RFC，其中著名的RFC 2616定义了HTTP 1.1,目前常用HTTP协议版本为HTTP/1.1和HTTP/1.2。 HTTP 的作用就是指导浏览器和服务器如何进行沟通当用户在浏览器输入网址点击回车后，大致发生了以下流程： HTTP 请求 HTTP请求最多包含四部分，最少包含三部分。（也就是说第四部分可以为空）示例如下： 1 动词 路径 协议/版本2 Key1: value12 Key2: value22 Key3: value32 Content-Type: application/x-www-form-urlencoded2 Host: www.baidu.com2 User-Agent: curl/7.54.034 要上传的数据 在Chrome开发者工具中，Network下可以查看请求报文首部和响应报文首部: HTTP响应 请求对应的响应分为4个部分组成示例如下： 1 协议/版本号 状态码 状态解释2 Key1: value12 Key2: value22 Content-Length: 179312 Content-Type: text/html34 要下载的内容 HTTP请求方法 方法 说明 方法 说明 GET 获取资源 POST 传输实体 PUT 传输文件 HEAD 获得报文首部 DELETE 删除文件 OPTIONS 询问支持的方法 TRACE 追踪路径 CONNECT 要求用隧道协议连接代理 LINK 建立和资源之间的联系 UNLINK 断开连接关系 curl命令 在浏览器上我们可以直接输入网址，但在命令行中，同样可以通过curl命令来完成动作。在官方文档对curl的解释是：curl是一种使用其中一种支持的协议从服务器传输数据或向服务器传输数据的工具，curl提供了大量有用的技巧，如代理支持，用户身份验证，FTP上传，HTTP发布，SSL连接，cookie，文件传输恢复等，如下是部分语法： curl语法curl [options] [URL…] curl -s -v -H “key: value” – “www.baidu.com&quot;-s:表示安静模式，不显示进度条；-v：表示显示请求报文和响应报文；-H “key：alue”：往首部字段添加key/alue curl -X POST -d “xxxx” -s -v -H “key: value” – “www.baidu.com&quot;-X POST:表示改变请求方法为POST（或者其他）； -d “xxxx”：表示上传xxxx","categories":[],"tags":[]},{"title":"命令行基础使用","slug":"命令行基础使用","date":"2018-10-27T03:19:49.711Z","updated":"2018-10-27T03:32:22.498Z","comments":true,"path":"2018/10/27/命令行基础使用/","link":"","permalink":"http://yoursite.com/2018/10/27/命令行基础使用/","excerpt":"","text":"命令行基础使用 命令行是每一个开发者都会频繁使用的，与Windows图形界面所不同的是，命令行操作都是靠命令来执行的。下面列举了一些常用的一些命令，例如增删改查。 基础命令介绍 命令 全写 缩写 创建目录 make directory mkdir 删除 remove rm 移动/重命名 move mv 复制 copy cp 罗列 list ls 改变目录 change directory 有些命令后面可以增加参数，达到不同目的。例如ls，表示列出目录下内容，常用参数有ls -a,ls -l,ls -la。ls -a表示列出目录下所有内容，包括以.开头的文件。ls -l表示以长列表列出目录下内容，包括内容权限，用户，修改时间等。 在图片中，使用touch命令，touch为触摸意思，当touch的文件不存在时，会创建该文件。当文件存在时，touch会更新文件的修改时间。 mv这个命令有移动/重命名意思，当不同路径时为移动，相同路径为重命名。 mv 1.txt ./1/2/操作为把1.txt从当前目录移动到./1/2/目录下 mv 1.txt 2.txt操作为把1.txt重命名为2.txt cat这个命令操作为连接文件并在标准输出上打印。 命令何其多，如果忘了某个命令可以Google。当看到某一个命令不知道为何意时，我们可以用man +命令来获得这个命令的相关参考手册，或者tldr +命令，tldr翻译是太长不读，可以通过npm i -g tldr安装这个工具。 当然也可以通过explainshell这个网站来查找命令解释。ss","categories":[],"tags":[]},{"title":"git使用教程","slug":"git使用教程","date":"2018-10-24T06:44:13.366Z","updated":"2018-10-26T14:23:49.910Z","comments":true,"path":"2018/10/24/git使用教程/","link":"","permalink":"http://yoursite.com/2018/10/24/git使用教程/","excerpt":"","text":"git使用教程 Git是一个分布式版本控制系统，最初是由林纳斯·托瓦兹创作。Github是一个基于Git的项目托管平台 Git的安装Windows上需要安装Git Bash，可直接从官网下载或者各镜像网站下载安装Linux只须运行 sudo apt-get install git 命令即可Mac上需要通过 homebrew 或者 Xcode 安装 Git的初使用在使用Git之前，我们需要先进行一些简单设置，目的是首先表明身份。 git config –global user.name 你的英文名git config –global user.email 你的邮箱git config –global push.default matchinggit config –global core.quotepath falsegit config –global core.editor “vim” Git初始的几个命令 通过git init命令把这个目录变成Git可以管理的仓库: $ git initInitialized empty Git repository in /Users/michael/learngit/.git/ 这个命令是用初始化一个空的Git仓库。同时在当前目录下多了一个.git目录，是用于跟踪管理版本库。在初次使用时，请忽略这个目录，不要修改它，避免把Git仓库破坏。 用命令git add告诉Git，把文件添加到仓库： $ git add readme.txt 这个命令是告诉Git把变动添加到“暂存区”。但是请注意命令后面要有文件或者目录。当正确执行这个明令后，不会有任何显示。 用命令git commit告诉Git，把文件提交到仓库： $ git commit -m “wrote a readme file”[master (root-commit) eaadf4e] wrote a readme file1 file changed, 2 insertions(+)create mode 100644 readme.txt 这个命令是提交暂存区到仓库区。同时git commit可以接不同参数。 -v表示提交时显示所有diff信息，即两个文本文件的差异-m [message]用来正式提交变动，提交至 .git 仓库-a 表示提交工作区自上次commit之后的变化，直接到仓库区，不建议采用这种提交，因为会导致以后的回溯出现混乱","categories":[],"tags":[]},{"title":"开博大吉","slug":"开博大吉","date":"2018-10-24T02:00:53.000Z","updated":"2018-10-24T02:00:53.109Z","comments":true,"path":"2018/10/24/开博大吉/","link":"","permalink":"http://yoursite.com/2018/10/24/开博大吉/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-10-24T01:53:50.403Z","updated":"2017-10-28T00:39:58.000Z","comments":true,"path":"2018/10/24/hello-world/","link":"","permalink":"http://yoursite.com/2018/10/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}