{"meta":{"title":"开博大吉","subtitle":null,"description":null,"author":"xvyabin","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"命令行基础使用","slug":"命令行基础使用","date":"2018-10-27T03:19:49.711Z","updated":"2018-10-27T03:32:22.498Z","comments":true,"path":"2018/10/27/命令行基础使用/","link":"","permalink":"http://yoursite.com/2018/10/27/命令行基础使用/","excerpt":"","text":"命令行基础使用 命令行是每一个开发者都会频繁使用的，与Windows图形界面所不同的是，命令行操作都是靠命令来执行的。下面列举了一些常用的一些命令，例如增删改查。 基础命令介绍 命令 全写 缩写 创建目录 make directory mkdir 删除 remove rm 移动/重命名 move mv 复制 copy cp 罗列 list ls 改变目录 change directory 有些命令后面可以增加参数，达到不同目的。例如ls，表示列出目录下内容，常用参数有ls -a,ls -l,ls -la。ls -a表示列出目录下所有内容，包括以.开头的文件。ls -l表示以长列表列出目录下内容，包括内容权限，用户，修改时间等。 在图片中，使用touch命令，touch为触摸意思，当touch的文件不存在时，会创建该文件。当文件存在时，touch会更新文件的修改时间。 mv这个命令有移动/重命名意思，当不同路径时为移动，相同路径为重命名。 mv 1.txt ./1/2/操作为把1.txt从当前目录移动到./1/2/目录下 mv 1.txt 2.txt操作为把1.txt重命名为2.txt cat这个命令操作为连接文件并在标准输出上打印。 命令何其多，如果忘了某个命令可以Google。当看到某一个命令不知道为何意时，我们可以用man +命令来获得这个命令的相关参考手册，或者tldr +命令，tldr翻译是太长不读，可以通过npm i -g tldr安装这个工具。 当然也可以通过explainshell这个网站来查找命令解释。ss","categories":[],"tags":[]},{"title":"git使用教程","slug":"git使用教程","date":"2018-10-24T06:44:13.366Z","updated":"2018-10-26T14:23:49.910Z","comments":true,"path":"2018/10/24/git使用教程/","link":"","permalink":"http://yoursite.com/2018/10/24/git使用教程/","excerpt":"","text":"git使用教程 Git是一个分布式版本控制系统，最初是由林纳斯·托瓦兹创作。Github是一个基于Git的项目托管平台 Git的安装Windows上需要安装Git Bash，可直接从官网下载或者各镜像网站下载安装Linux只须运行 sudo apt-get install git 命令即可Mac上需要通过 homebrew 或者 Xcode 安装 Git的初使用在使用Git之前，我们需要先进行一些简单设置，目的是首先表明身份。 git config –global user.name 你的英文名git config –global user.email 你的邮箱git config –global push.default matchinggit config –global core.quotepath falsegit config –global core.editor “vim” Git初始的几个命令 通过git init命令把这个目录变成Git可以管理的仓库: $ git initInitialized empty Git repository in /Users/michael/learngit/.git/ 这个命令是用初始化一个空的Git仓库。同时在当前目录下多了一个.git目录，是用于跟踪管理版本库。在初次使用时，请忽略这个目录，不要修改它，避免把Git仓库破坏。 用命令git add告诉Git，把文件添加到仓库： $ git add readme.txt 这个命令是告诉Git把变动添加到“暂存区”。但是请注意命令后面要有文件或者目录。当正确执行这个明令后，不会有任何显示。 用命令git commit告诉Git，把文件提交到仓库： $ git commit -m “wrote a readme file”[master (root-commit) eaadf4e] wrote a readme file1 file changed, 2 insertions(+)create mode 100644 readme.txt 这个命令是提交暂存区到仓库区。同时git commit可以接不同参数。 -v表示提交时显示所有diff信息，即两个文本文件的差异-m [message]用来正式提交变动，提交至 .git 仓库-a 表示提交工作区自上次commit之后的变化，直接到仓库区，不建议采用这种提交，因为会导致以后的回溯出现混乱","categories":[],"tags":[]},{"title":"开博大吉","slug":"开博大吉","date":"2018-10-24T02:00:53.000Z","updated":"2018-10-24T02:00:53.109Z","comments":true,"path":"2018/10/24/开博大吉/","link":"","permalink":"http://yoursite.com/2018/10/24/开博大吉/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-10-24T01:53:50.403Z","updated":"2017-10-28T00:39:58.000Z","comments":true,"path":"2018/10/24/hello-world/","link":"","permalink":"http://yoursite.com/2018/10/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}